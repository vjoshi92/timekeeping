{"version":3,"file":"static/js/887.0061e31c.chunk.js","mappings":"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","sources":["components/TreeDataGrid.jsx","components/TreeGrid.jsx","views/home/index.jsx","components/RowsDataColumn.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  DataGridPremium,\n  useGridApiRef,\n} from \"@mui/x-data-grid-premium\";\nimport { Box } from \"@mui/material\";\nimport { LicenseInfo } from \"@mui/x-license\";\nimport { useSelector } from \"react-redux\";\n\n// Set license key\nLicenseInfo.setLicenseKey(\n  \"25f2175523aa72e9d954ec0ef5a74461Tz05NjQ3MCxFPTE3NTU3MDU1NjQwMDAsUz1wcmVtaXVtLExNPXN1YnNjcmlwdGlvbixQVj1pbml0aWFsLEtWPTI=\"\n);\n\nconst TreeDataGrid = ({ columns, pagination = true, density = \"standard\", datagridName }) => {\n  const apiRef = useGridApiRef();\n  \n  // Get project data from Redux\n  const projectedData = useSelector((state) => state?.CreateForm?.projectData);\n  const [projectDataArray, setProjectDataArray] = useState([]);\n\n  // Update projectDataArray when new data comes in\n  useEffect(() => {\n    if (projectedData) {\n      setProjectDataArray(prevData => {\n        // Check if the new data already exists in the array\n        const exists = prevData.some(item => item.id === projectedData.id);\n        if (!exists) {\n          return [...prevData, projectedData];\n        }\n        return prevData;\n      });\n    }\n  }, [projectedData]);\n\n  // Create rows from project data\n  const createRowsFromProjectData = (dataArray) => {\n    return dataArray.map((item, index) => {\n      const baseRow = {\n        id: item.id || `row-${index}`,\n        ...item // Spread all other item properties\n      };\n\n      // Handle hierarchy\n      if (item.hirarchy && Array.isArray(item.hirarchy) && item.hirarchy.length > 0) {\n        return {\n          ...baseRow,\n          hierarchy: item.hirarchy,\n          treeData: {\n            group: false,\n            expanded: true\n          }\n        };\n      } else {\n        return {\n          ...baseRow,\n          hierarchy: [item.project || `Project ${index + 1}`],\n          treeData: {\n            group: false\n          }\n        };\n      }\n    });\n  };\n\n  // Style configuration\n  const customStyles = {\n    \"& .MuiDataGrid-cell\": {\n      paddingTop: \"5px !important\",\n      backgroundColor: \"#FFFF\"\n    },\n    \"& .MuiDataGrid-columnHeader\": {\n      backgroundColor: \"#EEEEEE\",\n      color: \"#121212DE\",\n      fontWeight: \"700\",\n      fontSize: \"16px\"\n    },\n    \"& .level-0\": {\n      color: \"#121212DE\",\n      fontWeight: \"700\",\n      marginRight: \"20px\"\n    },\n    \"& .level-1, & .level-2\": {\n      color: \"#0073E6DE\",\n      fontWeight: \"400\",\n      marginRight: \"20px\"\n    }\n  };\n\n  // Function to determine row class based on hierarchy level\n  const getRowClassName = (params) => {\n    const level = params.row.hierarchy ? params.row.hierarchy.length - 1 : 0;\n    return `level-${level}`;\n  };\n\n  // Generate rows from projectDataArray\n  const rows = createRowsFromProjectData(projectDataArray);\n\n  return (\n    <Box sx={{ height: 400, width: '100%' }}>\n      <DataGridPremium\n        rows={rows}\n        columns={columns}\n        density={density}\n        treeData\n        getTreeDataPath={(row) => row.hierarchy}\n        sx={customStyles}\n        getRowClassName={getRowClassName}\n        pagination={pagination}\n        hideFooter={!pagination}\n        getRowId={(row) => datagridName === 'RowsDataColumns' ? row.id : `${row.id}-${Math.random()}`}\n        apiRef={apiRef}\n      />\n    </Box>\n  );\n};\n\nexport default TreeDataGrid;","import * as React from 'react';\nimport { DataGridPro } from '@mui/x-data-grid-pro';\nimport { LicenseInfo } from '@mui/x-license';\nimport { useSelector } from 'react-redux';\nimport { DataGridPremium, GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD, useGridApiRef, useGridSelector, gridFilteredDescendantCountLookupSelector, useGridApiContext, useKeepGroupedColumnsHidden } from '@mui/x-data-grid-premium';\nimport { Box, Button } from '@mui/material';\n\nconst getTreeDataPath = (row) => row?.hierarchy;\n\nconst groupingColDef = {\n  headerName: '',\n};\n\n\nconst customStyles = {\n  \"& .MuiDataGrid-cell\": {\n    backgroundColor: \"#FFFF\"\n  },\n  \"& .MuiDataGrid-columnHeaderTitle .Mui-groupHeader\": {\n    display: \"none\" \n  },\n  \n  \"& .MuiDataGrid-columnHeader\": {\n    color: \"#121212DE\",\n    fontWeight: \"700\",\n    fontSize: \"16px\",\n    backgroundColor:\"#EEEEEE\",\n  },\n     \"& .MuiOutlinedInput-input\": {\n            backgroundColor: \"#FFFFFF\", \n          },\n      \n      \n  \"& .level-0\": {\n    color: \"#121212DE\",\n    fontWeight: \"700\",\n    marginRight: \"20px\"\n  },\n  \"& .level-1, & .level-2\": {\n    color: \"#0073E6DE\",\n    fontWeight: \"400\",\n    marginRight: \"20px\"\n  }\n};\n\n\nconst getRowClassName = (params) => {\n  const level = params.row.hierarchy ? params.row.hierarchy.length - 1 : 0;\n  return `level-${level}`;\n};\n\n\nLicenseInfo.setLicenseKey(\n  \"25f2175523aa72e9d954ec0ef5a74461Tz05NjQ3MCxFPTE3NTU3MDU1NjQwMDAsUz1wcmVtaXVtLExNPXN1YnNjcmlwdGlvbixQVj1pbml0aWFsLEtWPTI=\"\n);\n\n\nexport default function TreeGrid({ columns, density  }) {\n  const projectedData = useSelector((state) => state?.CreateForm?.projectData);\n\n  const apiRef = useGridApiRef();\n  // const initialState = useKeepGroupedColumnsHidden({\n  //   apiRef,\n  //   initialState: {\n      // pinnedColumns: { \n      //   left: [\n      //     GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD, \n      //     \"project\"\n      //   ] \n      // }\n  //   },\n  // });\n\n  return (\n    <div style={{ height: 400, width: '100%' }}>\n      <DataGridPremium\n        treeData\n        rows={projectedData || []}\n        columns={columns}\n        hideFooter\n        autoHeight \n        initialState={{   pinnedColumns: { \n          left: [\n            GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD, \n            \"project\",\"level\"\n          ] \n        }}}\n        density={density || \"compact\"}\n        // getRowId={(row) => (datagridName === \"DaysColumns\" ? row?.id : Math?.random())}\n        apiRef={apiRef}\n        getTreeDataPath={getTreeDataPath}\n        hideGroupingColumns={true}\n        groupingColDef={groupingColDef}\n        // sx={{\n        //   \"& .MuiDataGrid-cell\": {\n        //     backgroundColor: \"#FFFFFF\", // Cell background color\n        //     color: \"black\", // Parent text color\n        //   },\n        //   \"& .MuiDataGrid-cell:first-child\": {\n        //     color: \"blue\", // First child text color\n        //   },\n        //   \"& .MuiDataGrid-cell:last-child\": {\n        //     color: \"blue\", // Last child text color, if needed\n        //   },\n        //   \"& .MuiOutlinedInput-input\": {\n        //     backgroundColor: \"#FFFFFF\", // Input background\n        //   },\n        //   \"& .MuiDataGrid-columnHeaderTitle\": {\n        //     display: \"none\", \n        //   },\n        //   \"& .MuiDataGrid-columnHeader\": {\n        //     backgroundColor: \"#EEEEEE\", \n        //     color: \"black\", \n        //     fontWeight: \"700\",\n        //     fontSize: \"16px\",\n        //   },\n        //   \"& .MuiDataGrid-cell--textLeft\": {\n        //     color: \"black\", \n        //     fontWeight: \"700\",\n        //     fontSize: \"16px\",\n        //   },\n        // }}\n        sx={customStyles}\n        getRowClassName={getRowClassName}\n        \n      />\n    </div>\n  );\n}\n\n\n\n\n\n\n// import * as React from 'react';\n// import { DataGridPro } from '@mui/x-data-grid-pro';\n// import { LicenseInfo } from '@mui/x-license';\n// import { useSelector } from 'react-redux';\n// import { Box } from '@mui/material';\n// import { DataGridPremium, useGridApiRef, useKeepGroupedColumnsHidden } from '@mui/x-data-grid-premium';\n// import MuiDataGrid from './MuiDataGrid';\n\n\n// LicenseInfo.setLicenseKey(\n//   \"25f2175523aa72e9d954ec0ef5a74461Tz05NjQ3MCxFPTE3NTU3MDU1NjQwMDAsUz1wcmVtaXVtLExNPXN1YnNjcmlwdGlvbixQVj1pbml0aWFsLEtWPTI=\"\n// );\n\n// export default function TreeGrid({ columns, density }) {\n//   const projectedData = useSelector((state) => state?.CreateForm?.projectData);\n//   console.log(\"projectedData\" , projectedData)\n\n//   return (\n//     <MuiDataGrid\n//       rows={projectedData}\n//       columns={columns}\n//       density={density || \"compact\"}\n//       hideFooter\n//     />\n//   );\n// }\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport { Box, Button, Fade, IconButton, Modal, Popper, Stack, ToggleButton, Typography } from \"@mui/material\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport styled from \"@emotion/styled\";\r\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\";\r\nimport ArrowBackIcon from \"@mui/icons-material/ArrowBack\";\r\nimport ArrowForwardIcon from \"@mui/icons-material/ArrowForward\";\r\nimport { DatePicker, LocalizationProvider } from \"@mui/x-date-pickers\";\r\nimport FileCopyIcon from '@mui/icons-material/FileCopy';\r\nimport AddIcon from '@mui/icons-material/Add';\r\nimport MuiDataGrid from \"../../components/MuiDataGrid\";\r\nimport { getCurrentWeekDays, PRColumns } from \"../../constant/Columns\";\r\nimport DateRangePickerWithButtonField from \"../../components/DateRangeButtonFeild\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport CheckCircleOutlineIcon from '@mui/icons-material/CheckCircleOutline';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\nimport dayjs from 'dayjs';\r\nimport { DaysColumns, EstimateColumns } from \"components/CurrentWeekColumns\";\r\nimport TreeDataGrid from \"components/TreeDataGrid\";\r\nimport { RowsDataColumns } from \"components/RowsDataColumn\";\r\nimport TreeGrid from \"components/TreeGrid\";\r\nimport MuiInput from \"components/MuiInput\";\r\n\r\n\r\nconst style = {\r\n  position: 'absolute',\r\n  top: '50%',\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  height: 150,\r\n  bgcolor: '#FFFFFF',\r\n  boxShadow: 24,\r\n  p: 4,\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  flexDirection: \"column\"\r\n};\r\n\r\nconst ApprovalBox = styled(Box)(({ theme }) => ({\r\n  backgroundColor: \"#FFFFFF\",\r\n  display: \"flex\",\r\n  borderRadius: \"6px\",\r\n  width: \"355px\",\r\n  height: \"250px\",\r\n  // justifyContent: \"center\",\r\n  // alignItems: \"center\",\r\n  flexDirection: \"column\",\r\n  padding: \"20px\"\r\n}));\r\n\r\nconst SubModalstyle = {\r\n\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 400,\r\n  height: 100,\r\n  bgcolor: '#FFFF',\r\n  boxShadow: 24,\r\n  p: 4,\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  flexDirection: \"column\"\r\n};\r\n\r\nconst StyledDateTypography = styled(Typography)(({ theme }) => ({\r\n  fontSize: \"22px\",\r\n  lineHeight: \"26px\",\r\n  fontWeight: \"500\",\r\n  padding: \"0 8px\",\r\n  borderRadius: \"4px\",\r\n}));\r\n\r\nconst SaveTypography = styled(Typography)(({ theme }) => ({\r\n  fontSize: \"16px\",\r\n  fontWeight: \"700\",\r\n  color: \"#FFFF\"\r\n}));\r\nconst SaveNoteTypography = styled(Typography)(({ theme }) => ({\r\n  fontSize: \"15px\",\r\n  fontWeight: \"700\",\r\n  color: \"#FFFF\"\r\n}));\r\n\r\nconst CancelTypography = styled(Typography)(({ theme }) => ({\r\n  fontSize: \"16px\",\r\n  fontWeight: \"700\",\r\n  color: \"#ED6A15\"\r\n}));\r\nconst CancelNoteTypography = styled(Typography)(({ theme }) => ({\r\n  fontSize: \"15px\",\r\n  fontWeight: \"700\",\r\n  color: \"#005AA6\"\r\n}));\r\n\r\nconst StyledStackButton = styled(Stack)(({ theme }) => ({\r\n  direction: \"row\"\r\n}));\r\n\r\nconst ButtonStack = styled(Stack)(({ theme }) => ({\r\n  direction: \"row\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  marginTop: \"2%\"\r\n}));\r\n\r\nconst NoteButtonStack = styled(Stack)(({ theme }) => ({\r\n  direction: \"row\",\r\n  display: \"flex\",\r\n  justifyContent: \"flex-end\",\r\n  alignItems: \"center\",\r\n  marginTop: \"8%\"\r\n}));\r\n\r\nconst StyledButton1 = styled(Button)(({ theme }) => ({\r\n  width: \"34px\",\r\n  height: \"34px\",\r\n  marginRight: \"10px\",\r\n  borderRadius: \"6px\",\r\n  border: \"1px solid #BDBDBD\",\r\n  boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\r\n  transition: \"box-shadow 0.3s ease-in-out\",\r\n  \"&:hover\": {\r\n    boxShadow: \"0px 6px 10px rgba(0, 0, 0, 0.15)\",\r\n  },\r\n}));\r\nconst StyledButton2 = styled(Button)(({ theme }) => ({\r\n  width: \"34px\",\r\n  height: \"34px\",\r\n  marginRight: \"10px\",\r\n  borderRadius: \"6px\",\r\n  border: \"1px solid #ED6A15\",\r\n  boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\r\n  transition: \"box-shadow 0.3s ease-in-out\",\r\n  \"&:hover\": {\r\n    boxShadow: \"0px 6px 10px rgba(0, 0, 0, 0.15)\",\r\n  },\r\n}));\r\n\r\nconst SaveButton = styled(Button)(({ theme }) => ({\r\n  width: \"100px\",\r\n  height: \"34px\",\r\n  marginRight: \"10px\",\r\n  borderRadius: \"6px\",\r\n  backgroundColor: \"#ED6A15\",\r\n  boxShadow: 1\r\n}));\r\nconst SaveNoteButton = styled(Button)(({ theme }) => ({\r\n  width: \"100px\",\r\n  height: \"42px\",\r\n  marginRight: \"10px\",\r\n  borderRadius: \"6px\",\r\n  backgroundColor: \"#005AA6\",\r\n  boxShadow: 1\r\n}));\r\n\r\nconst CancelButton = styled(Button)(({ theme }) => ({\r\n  width: \"100px\",\r\n  height: \"34px\",\r\n  marginRight: \"10px\",\r\n  borderRadius: \"6px\",\r\n  border: \"1px solid #ED6A15\",\r\n  boxShadow: 1\r\n}));\r\n\r\nconst CancelNoteButton = styled(Button)(({ theme }) => ({\r\n  width: \"100px\",\r\n  height: \"42px\",\r\n  marginRight: \"10px\",\r\n  borderRadius: \"6px\",\r\n  border: \"1px solid #005AA6\",\r\n  boxShadow: 1\r\n}));\r\n\r\nconst FooterButton = styled(Button)(({ theme }) => ({\r\n  width: \"95%\",\r\n  backgroundColor: \"#ED6A15\",\r\n  position: \"absolute\",\r\n  bottom: \"3%\",\r\n  [theme.breakpoints.up(\"sm\")]: {\r\n    width: \"95%\",\r\n  },\r\n  [theme.breakpoints.up(\"md\")]: {\r\n    width: \"97%\",\r\n  },\r\n  [theme.breakpoints.up(\"lg\")]: {\r\n    width: \"97%\",\r\n  }\r\n}));\r\n\r\nconst StyledFooterText = styled(Typography)(({ theme }) => ({\r\n  color: \"#FFFF\",\r\n  fontWeight: \"700\",\r\n  fontSize: \"15px\"\r\n}));\r\n\r\nconst ModalTypography = styled(Typography)(({ theme }) => ({\r\n\r\n  fontWeight: \"700\",\r\n  fontSize: \"22px\"\r\n}));\r\n\r\nconst ModalLimitTypography = styled(Typography)(({ theme }) => ({\r\n  fontWeight: \"400\",\r\n  fontSize: \"12px\"\r\n}));\r\nconst ModalYesTypography = styled(Typography)(({ theme }) => ({\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n  fontWeight: \"700\",\r\n  fontSize: \"15px\",\r\n  color: \"#41AF6E\"\r\n}));\r\n\r\nconst StyledCircularBox = styled(Box)(({ theme }) => ({\r\n  width: \"23px\",\r\n  height: \"23px\",\r\n  borderRadius: \"50px\",\r\n  backgroundColor: \"#ED6A15\",\r\n  boxShadow: 1,\r\n  justifyContent: \"center\",\r\n  alignItems: \"center\",\r\n}));\r\n\r\nconst StyledStack = styled(Box)(({ theme }) => ({\r\n  backgroundColor: \"#FFFFFF\",\r\n}));\r\n\r\nconst StyledBox = styled(Box)(({ theme }) => ({\r\n  zIndex: 2,\r\n  display: \"flex\",\r\n  flexDirection: \"row\",\r\n  alignItems: \"center\",\r\n}));\r\n\r\nconst Home = () => {\r\n  const [alignment, setAlignment] = React.useState(\"left\");\r\n  const [value, setValue] = React.useState([null, null]);\r\n  const selectedDate = useSelector((state) => state?.home?.daterange);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [openApproval, setOpenApproval] = React.useState(false);\r\n  const [isTimesheetCreated, setIsTimesheetCreated] = useState(false);\r\n  const handleOpen = () => setOpen(true);\r\n  const handleApproval = () => setOpenApproval(true);\r\n  const handelSaveNote = () => setOpenApproval(true);\r\n  const handleClose = () => setOpen(false);\r\n  const handleApprovalClose = () => setOpenApproval(false);\r\n  const navigate = useNavigate();\r\n  const projectedData = useSelector((state) => state?.CreateForm?.projectData);\r\n\r\n\r\n\r\n  const handleYes = () => {\r\n    setOpen(false);\r\n    setIsTimesheetCreated(true);\r\n  };\r\n  const handleTimesheetModalClose = () => setIsTimesheetCreated(false);\r\n\r\n  const handleAlignment = (event, newAlignment) => {\r\n    setAlignment(newAlignment);\r\n  };\r\n\r\n  const startOfCurrentWeek = dayjs().startOf('week').add(1, 'day');\r\n  const endOfCurrentWeek = dayjs().endOf('week').add(1, 'day');\r\n  const formattedDateRange = `${startOfCurrentWeek.format('DD MMM YY')} - ${endOfCurrentWeek.format('DD MMM YY')}`;\r\n\r\n\r\n\r\n  const rows = [\r\n    { id: 1, day1: 0, day2: 0, day3: 0, day4: 0, day5: 0, day6: 0, day7: 0 },\r\n  ];\r\n\r\n\r\n  const handleInputChange = (field, value, rowId) => {\r\n    let tempRows = [...rows];\r\n    let tempRow = tempRows[rowId];\r\n    tempRow = { ...tempRow, [field]: value };\r\n    tempRows[rowId] = tempRow;\r\n    // setRows(tempRows);\r\n  };\r\n\r\n  const handleDelete = (rowId) => {\r\n    let tempRows = [...rows];\r\n    tempRows.splice(rowId, 1);\r\n    // setRows(tempRows)\r\n    // dispatch(setEstimates(tempRows));\r\n    // updateCount(tempRows);\r\n  };\r\n\r\n  const AllDaysColumns = DaysColumns({ rows, selectedDate, handleInputChange, handleDelete })\r\n  const AllRowsColumns = RowsDataColumns({\r\n    rows,\r\n    selectedDate,\r\n    handleInputChange,\r\n    handleDelete,\r\n    isParent: false\r\n  });\r\n\r\n  const handleSubmit = () => {\r\n    navigate(\"/addRows\")\r\n  }\r\n\r\n  return (\r\n    <StyledStack\r\n      padding={{ xs: 1, sm: 2 }}\r\n      height={{ xs: \"100vh\", sm: \"90vh\", md: \"90vh\", lg: \"90vh\" }}\r\n    >\r\n      <StyledBox>\r\n      <ToggleButtonGroup\r\n    value={alignment}\r\n    exclusive\r\n    onChange={handleAlignment}\r\n    aria-label=\"text alignment\"\r\n    sx={{\r\n        mr: 1,\r\n        boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\", \r\n        transition: \"box-shadow 0.3s ease-in-out\",\r\n        \"&:hover\": {\r\n            boxShadow: \"0px 6px 10px rgba(0, 0, 0, 0.15)\",\r\n        },\r\n        \"& .MuiToggleButton-root.Mui-selected\": {\r\n            backgroundColor: \"#FFFFFF\",\r\n            \"&:hover\": {\r\n                backgroundColor: \"#FFFFFF\",\r\n            },\r\n            boxShadow: \"0px 4px 6px rgba(0, 0, 0, 0.1)\",\r\n            transition: \"box-shadow 0.3s ease-in-out\",\r\n            \"&:hover\": {\r\n                boxShadow: \"0px 6px 10px rgba(0, 0, 0, 0.15)\",\r\n            },\r\n        },\r\n    }}\r\n>\r\n          <ToggleButton value=\"left\" aria-label=\"left aligned\" >\r\n            <ArrowBackIcon />\r\n          </ToggleButton>\r\n          <ToggleButton value=\"justify\" aria-label=\"justified\">\r\n            <ArrowForwardIcon />\r\n          </ToggleButton>\r\n        </ToggleButtonGroup>\r\n\r\n        <StyledDateTypography>\r\n          {Array.isArray(selectedDate) && selectedDate.length === 0\r\n            ? formattedDateRange\r\n            : selectedDate || formattedDateRange}\r\n        </StyledDateTypography>\r\n\r\n      </StyledBox>\r\n      <StyledStackButton direction={\"row\"} justifyContent={\"space-between\"} mt={2}>\r\n        <DateRangePickerWithButtonField\r\n          label={\r\n            value[0] === null && value[1] === null\r\n              ? null\r\n              : value.map((date) => (date ? date.format('MM/DD/YYYY') : 'null')).join(' - ')\r\n          }\r\n          value={value}\r\n          onChange={(newValue) => setValue(newValue)}\r\n        />\r\n\r\n        <Stack direction={\"row\"}   >\r\n          <StyledButton2 size=\"small\" variant=\"outlined\" boxShadow=\"5\" onClick={handleOpen}>\r\n            <FileCopyIcon fontSize=\"small\" backgroundColor=\"#FFFF\" sx={{ color: \"#ED6A15\" }} />\r\n          </StyledButton2>\r\n          <StyledButton2 size=\"small\" variant=\"outlined\" onClick={handleSubmit}>\r\n            <StyledCircularBox>\r\n              <AddIcon fontSize=\"small\" color=\"#FFFF\" sx={{ color: \"#FFFF\" }} />\r\n            </StyledCircularBox>\r\n          </StyledButton2>\r\n        </Stack>\r\n      </StyledStackButton>\r\n      <Stack mt={2}>\r\n        {projectedData && Object?.keys(projectedData)?.length > 0 ? (\r\n          // <TreeDataGrid columns={AllRowsColumns} density={\"standard\"} />\r\n          <TreeGrid columns={AllRowsColumns} density={\"standard\"} />\r\n        ) : (\r\n          <MuiDataGrid columns={AllDaysColumns} rows={rows} density={\"standard\"} />\r\n        )}\r\n      </Stack>\r\n\r\n      <FooterButton size=\"large\" fullWidth onClick={() => handleApproval()}>\r\n        <StyledFooterText >\r\n          Submit Week for Approval\r\n        </StyledFooterText>\r\n      </FooterButton>\r\n      <Modal\r\n        keepMounted\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"keep-mounted-modal-title\"\r\n        aria-describedby=\"keep-mounted-modal-description\"\r\n        BackdropProps={{\r\n          style: {\r\n            backgroundColor: 'rgba(255, 255, 255, 0.9)'\r\n          }\r\n        }}\r\n\r\n      >\r\n        <Box sx={style} >\r\n          <ModalTypography>\r\n            Do you want to copy last weeks's\r\n          </ModalTypography>\r\n          <ModalTypography>\r\n            timesheet?\r\n          </ModalTypography>\r\n          <ButtonStack direction=\"row\" spacing={3}>\r\n\r\n            <CancelButton id=\"keep-mounted-modal-title\" variant=\"h6\" component=\"h2\" size=\"small\" onClick={() => handleClose()}>\r\n              <CancelTypography>Cancel</CancelTypography>\r\n            </CancelButton>\r\n            <SaveButton id=\"keep-mounted-modal-description\" sx={{ mt: 2 }} size=\"small\" onClick={handleYes}>\r\n              <SaveTypography>Yes</SaveTypography>\r\n            </SaveButton>\r\n          </ButtonStack>\r\n        </Box>\r\n      </Modal>\r\n\r\n      <Modal\r\n        keepMounted\r\n        open={openApproval}\r\n        onClose={handleApprovalClose}\r\n        sx={{\r\n          display: \"flex\",\r\n          justifyContent: \"center\",\r\n          alignItems: \"center\"\r\n        }}\r\n        aria-labelledby=\"keep-mounted-modal-title\"\r\n        aria-describedby=\"keep-mounted-modal-description\"\r\n        BackdropProps={{\r\n          style: {\r\n            backgroundColor: '#121212',\r\n            opacity: \"80%\"\r\n          }\r\n        }}\r\n\r\n      >\r\n        <ApprovalBox >\r\n          <Box sx={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"flex-start\", alignItems: \"center\", marginBottom: \"5%\" }}>\r\n            <ModalTypography>\r\n              Add Note\r\n            </ModalTypography>\r\n            <ModalLimitTypography>\r\n              (255 character limit)\r\n            </ModalLimitTypography>\r\n          </Box>\r\n          <MuiInput\r\n            rows={4}\r\n            multiline={true}\r\n          />\r\n          <NoteButtonStack direction=\"row\" spacing={3}>\r\n\r\n            <CancelNoteButton id=\"keep-mounted-modal-title\" variant=\"h6\" component=\"h2\" size=\"small\" onClick={() => handleApprovalClose()}>\r\n              <CancelNoteTypography>Cancel</CancelNoteTypography>\r\n            </CancelNoteButton>\r\n            <SaveNoteButton id=\"keep-mounted-modal-description\" sx={{ mt: 2 }} size=\"small\" onClick={handelSaveNote}>\r\n              <SaveNoteTypography>Save</SaveNoteTypography>\r\n            </SaveNoteButton>\r\n          </NoteButtonStack>\r\n        </ApprovalBox>\r\n      </Modal>\r\n\r\n      <Modal\r\n        open={isTimesheetCreated}\r\n        onClose={handleTimesheetModalClose}\r\n      >\r\n        <>\r\n          {/* <CloseIcon sx={{position:\"relative\" }}/> */}\r\n          <Box sx={SubModalstyle} >\r\n            <CheckCircleOutlineIcon color=\"#41AF6E\" sx={{ color: \"#41AF6E\", width: \"50px\", height: \"50px\" }} />\r\n            <ModalYesTypography>\r\n              Your new timesheet has been created\r\n            </ModalYesTypography>\r\n          </Box>\r\n        </>\r\n      </Modal>\r\n    </StyledStack>\r\n  );\r\n};\r\nexport default Home;\r\n","import React from 'react';\nimport { Box, IconButton, Typography } from '@mui/material';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport TextSnippetIcon from '@mui/icons-material/TextSnippet';\nimport MuiInput from './MuiInput';\nimport clsx from 'clsx';\nimport dayjs from 'dayjs';\nimport {\n    isAutogeneratedRow,\n} from '@mui/x-data-grid-premium';\n\nexport const RowsDataColumns = ({ handleInputChange, handleDelete, selectedDate }) => {\n    const getWeekDays = () => {\n        let startDate;\n        if (Array?.isArray(selectedDate) && selectedDate?.length === 0) {\n            startDate = dayjs().startOf('week').add(1, 'day');\n        } else if (selectedDate) {\n            const [startDateStr] = selectedDate.split(' - ');\n            startDate = dayjs(startDateStr, 'DD MMM YY');\n        } else {\n            startDate = dayjs().startOf('week').add(1, 'day');\n        }\n\n        const weekDays = [];\n        for (let i = 0; i < 7; i++) {\n            const currentDate = dayjs(startDate).add(i, 'day');\n            const isToday = currentDate?.isSame(dayjs(), 'date');\n\n            weekDays.push({\n                field: `day${i}`,\n                headerName: currentDate?.format('ddd'),\n                flex: 1,\n                minWidth: 120,\n                cellClassName: (params) => {\n                    if (params?.value == null) {\n                        return '';\n                    }\n\n                    return clsx('super-app', {\n                        negative: params.value < 0,\n                        positive: params.value > 0,\n                    });\n                },\n                headerClassName: isToday ? 'highlight-column' : '',\n\n                renderHeader: () => (\n                    <Box\n                        sx={{\n                            display: 'flex',\n                            flexDirection: 'column',\n                            justifyContent: 'space-between',\n                            height: '100%',\n                            width: \"100%\",\n                     \n                            borderBottom: isToday ? '4px solid #ED6A15' : 'none',\n                       \n                        }}\n                    >\n                        <Box style={{ fontWeight: '700', textAlign: 'center', color: isToday ? '#ED6A15' : '#121212DE', }}>\n                            {currentDate.format('ddd')}\n                        </Box>\n                        <Box style={{ fontWeight: '400', fontSize: '14px', textAlign: 'center', color: isToday ? '#ED6A15' : '#121212DE' }}>\n                            {currentDate.format('DD MMM')}\n                        </Box>\n                    </Box>\n                ),\n                valueGetter: (value, row) => {\n                    if (isAutogeneratedRow(row)) {\n                        return '[this is an autogenerated row]';\n                    }\n                    return `title: ${value}`;\n                },\n                renderCell: (params) => {\n                    if (params?.row?.isParent || isAutogeneratedRow(params?.row)) {\n\n                        return <Box\n                            sx={{\n                                width: '100%',\n                                height: '100%',\n                                backgroundColor: isToday ? '#FBE1D0' : 'transparent',\n                                \n                            }}\n                        ></Box>;\n                    }\n                    return (\n                        <Box\n                            sx={{\n                                width: '100%',\n                                height: '100%',\n                                backgroundColor: isToday ? '#FBE1D0' : 'transparent',\n                                display: 'flex',\n                                alignItems: 'center',\n                                justifyContent: 'center',\n                                \"& .css-m72fcg-MuiFormControl-root-MuiTextField-root\": {\n                                    width: '87% !important',\n\n                                },\n                                \"& .MuiDataGrid-root\": {\n                                    backgroundColor: isToday ? '#FBE1D0' : 'transparent',\n                                    fontWeight: \"700\",\n                                    fontSize: \"16px\",\n                                },\n                            }}\n                        >\n                            <MuiInput\n                                type={'number'}\n                                onChange={(value) => handleInputChange(`day${i}`, value, params?.row?.id)}\n                                value={params?.value || 0}\n                                disabled={false}\n                                sx={{\n                                    width: '87% !important',\n                                    verticalAlign: 'unset',\n                                    backgroundColor: \"#FFFFFF\",\n\n                                }}\n                            />\n                        </Box>\n                    );\n                },\n            });\n        }\n        return weekDays;\n    };\n\n    const weekDayColumns = getWeekDays();\n\n    const columns = [\n        // {\n        //     field: 'project',\n        //     headerName: '',\n        //     flex: 0.5,\n        //     minWidth: 100,\n        //     treeField: true,\n        //     renderCell: (params) => {\n        //         const indent = params.api.getRowNode(params.id)?.depth * 10 || 0;\n        //         return (\n        //             <Box sx={{\n        //                 ml: `${indent}px`, display: \"flex\",\n        //                 justifyContent: \"center\",\n        //                 alignItems: \"center\",\n        //                 marginTop: \"10px\",\n        //             }}>\n        //                 <Typography sx={{ color: \"#121212DE\", fontWeight: \"700\", marginLeft: \"-10px\" }}>\n        //                     {params.value}\n        //                 </Typography>\n        //             </Box>\n        //         );\n        //     },\n        // },\n\n        // {\n        //     field: 'level',\n        //     headerName: '',\n        //     flex: 0.5,\n        //     minWidth: 150,\n        //     treeField: true,\n        //     renderCell: (params) => {\n        //         const indent = params.api.getRowNode(params.id)?.depth * 10\n        //         return (\n        //             <Box\n        //                 sx={{\n        //                     ml: `${indent}px`,\n        //                     display: \"flex\",\n        //                     justifyContent: \"center\",\n        //                     alignItems: \"center\",\n        //                     marginTop: \"10px\",\n        //                     overflowX: \"auto\",\n        //                     // whiteSpace: \"nowrap\",\n        //                     scrollbarWidth: \"none\", \n        //                    '&::-webkit-scrollbar': { display: 'none' },\n        //                 }}>\n        //                 <Typography \n        //                 sx={{ \n        //                     color: \"#0073E6DE\", \n        //                     fontWeight: \"500\", \n        //                     // marginLeft:\"5px\",\n        //                     overflow: \"hidden\", \n        //                     textOverflow: \"ellipsis\", \n        //                     whiteSpace: \"nowrap\", \n        //                     }}>\n        //                     {params.value}\n        //                 </Typography>\n        //             </Box>\n        //         );\n        //     },\n        // },\n\n        ...weekDayColumns,\n        {\n            field: 'Actions',\n            headerName: 'ACTIONS',\n            flex: 0.5,\n            minWidth: 100,\n            valueGetter: (value, row) => {\n                if (isAutogeneratedRow(row)) {\n                    return '[this is an autogenerated row]';\n                }\n                return `title: ${value}`;\n            },\n            renderCell: (params) => {\n                if (params.row.isParent || isAutogeneratedRow(params.row)) {\n                    return <Box\n                        sx={{\n                            width: '100%',\n                            height: '100%',\n                            backgroundColor: 'transparent',\n                        }}\n                    ></Box>;\n                }\n                return (\n                    <Box\n                        sx={{\n                            width: '100%',\n                            height: '100%',\n                            display: 'flex',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                        }}\n                    >\n                        <IconButton\n                            size=\"small\"\n                            sx={{ marginBottom: '10px' }}\n                            color=\"#ED6A15\"\n                            // onClick={() => handleDelete(params?.row?.id)}\n                        >\n                            <TextSnippetIcon />\n                        </IconButton>\n                        <Typography sx={{ color: \"#121212DE\", fontWeight: \"700\" }} >\n                            0\n                        </Typography>\n                        <IconButton\n                            size=\"small\"\n                            sx={{ marginBottom: '10px' }}\n                            color=\"secondary\"\n                            onClick={() => handleDelete(params?.row?.id)}\n                        >\n                            <DeleteIcon />\n                        </IconButton>\n                    </Box>\n                );\n            },\n        },\n\n    ];\n\n    return columns;\n};"],"names":["LicenseInfo","setLicenseKey","getTreeDataPath","row","hierarchy","groupingColDef","headerName","customStyles","backgroundColor","display","color","fontWeight","fontSize","marginRight","getRowClassName","params","length","TreeGrid","_ref","columns","density","projectedData","useSelector","state","_state$CreateForm","CreateForm","projectData","apiRef","useGridApiRef","_jsx","style","height","width","children","DataGridPremium","treeData","rows","hideFooter","autoHeight","initialState","pinnedColumns","left","GRID_ROW_GROUPING_SINGLE_GROUPING_FIELD","hideGroupingColumns","sx","position","top","transform","bgcolor","boxShadow","p","justifyContent","alignItems","flexDirection","ApprovalBox","styled","Box","theme","borderRadius","padding","SubModalstyle","StyledDateTypography","Typography","_ref2","lineHeight","SaveTypography","_ref3","SaveNoteTypography","_ref4","CancelTypography","_ref5","CancelNoteTypography","_ref6","StyledStackButton","Stack","_ref7","direction","ButtonStack","_ref8","marginTop","NoteButtonStack","_ref9","StyledButton2","Button","_ref10","border","transition","_ref11","SaveButton","_ref12","SaveNoteButton","_ref13","CancelButton","_ref14","CancelNoteButton","_ref15","FooterButton","_ref16","bottom","breakpoints","up","StyledFooterText","_ref17","ModalTypography","_ref18","ModalLimitTypography","_ref19","ModalYesTypography","_ref20","StyledCircularBox","_ref21","StyledStack","_ref22","StyledBox","_ref23","zIndex","Home","_Object$keys","alignment","setAlignment","React","value","setValue","selectedDate","_state$home","home","daterange","open","setOpen","openApproval","setOpenApproval","isTimesheetCreated","setIsTimesheetCreated","useState","handleClose","handleApprovalClose","navigate","useNavigate","startOfCurrentWeek","dayjs","startOf","add","endOfCurrentWeek","endOf","formattedDateRange","format","id","day1","day2","day3","day4","day5","day6","day7","handleInputChange","field","rowId","tempRows","tempRow","handleDelete","splice","AllDaysColumns","DaysColumns","AllRowsColumns","getWeekDays","startDate","Array","isArray","startDateStr","split","weekDays","i","currentDate","isToday","isSame","push","flex","minWidth","cellClassName","clsx","negative","positive","headerClassName","renderHeader","_jsxs","borderBottom","textAlign","valueGetter","isAutogeneratedRow","renderCell","_params$row","isParent","MuiInput","type","onChange","_params$row2","disabled","verticalAlign","IconButton","size","marginBottom","TextSnippetIcon","onClick","_params$row3","DeleteIcon","RowsDataColumns","xs","sm","md","lg","ToggleButtonGroup","exclusive","handleAlignment","event","newAlignment","mr","ToggleButton","ArrowBackIcon","ArrowForwardIcon","mt","DateRangePickerWithButtonField","label","map","date","join","newValue","variant","handleOpen","FileCopyIcon","handleSubmit","AddIcon","Object","keys","MuiDataGrid","fullWidth","Modal","keepMounted","onClose","BackdropProps","spacing","component","handleYes","opacity","multiline","handelSaveNote","handleTimesheetModalClose","_Fragment","CheckCircleOutlineIcon"],"sourceRoot":""}